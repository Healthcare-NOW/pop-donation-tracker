"""Breaking out Campaign table.

Revision ID: d4a71e0fdef1
Revises: 50f69ca4c519
Create Date: 2021-06-08 18:59:44.462997

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd4a71e0fdef1'
down_revision = '50f69ca4c519'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaign',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('election_year', sa.SmallInteger(), nullable=False),
                    sa.Column('office', postgresql.ENUM('H', 'S', name='office', create_type=False), nullable=False),
                    sa.Column('office_state', sa.String(length=2), nullable=False),
                    sa.Column('office_district', sa.String(length=2), nullable=True),
                    sa.Column('incumbent_challenger_status',
                              postgresql.ENUM('C', 'I', 'O', name='incumbent_challenger_status', create_type=False), nullable=True),
                    sa.Column('party_affiliation', sa.String(length=3), nullable=True),
                    sa.Column('candidate_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Copy campaign data over to campaign table
    op.execute(
        """INSERT INTO campaign(
        created_at,
        updated_at,
        election_year,
        office,
        office_state,
        office_district,
        incumbent_challenger_status,
        party_affiliation,
        candidate_id
        )
        SELECT         
        created_at,
        updated_at,
        election_year,
        office,
        office_state,
        office_district,
        incumbent_challenger_status,
        party_affiliation,
        id
        FROM candidate
        """)

    op.drop_column('candidate', 'incumbent_challenger_status')
    op.drop_column('candidate', 'office_district')
    op.drop_column('candidate', 'election_year')
    op.drop_column('candidate', 'office')
    op.drop_column('candidate', 'office_state')
    op.drop_column('candidate', 'party_affiliation')
    op.drop_index('individual_contributor_name_city_state_zip_employer_occupation_',
                  table_name='individual_contributor')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('individual_contributor_name_city_state_zip_employer_occupation_', 'individual_contributor',
                    ['name', 'city', 'state', 'zip', 'employer', 'occupation'], unique=False)
    op.add_column('candidate', sa.Column('party_affiliation', sa.VARCHAR(length=3), autoincrement=False, nullable=True))
    op.add_column('candidate', sa.Column('office_state', sa.VARCHAR(length=2), autoincrement=False, nullable=False))
    op.add_column('candidate',
                  sa.Column('office', postgresql.ENUM('H', 'S', name='office'), autoincrement=False, nullable=False))
    op.add_column('candidate', sa.Column('election_year', sa.SMALLINT(), autoincrement=False, nullable=False))
    op.add_column('candidate', sa.Column('office_district', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
    op.add_column('candidate', sa.Column('incumbent_challenger_status',
                                         postgresql.ENUM('C', 'I', 'O', name='incumbent_challenger_status'),
                                         autoincrement=False, nullable=True))
    op.execute("""
    UPDATE candidate
    SET 
    election_year = campaign.election_year,
    office = campaign.office,
    office_state = campaign.office_state,
    office_district = campaign.office_district,
    incumbent_challenger_status = campaign.incumbent_challenger_status,
    party_affiliation = campaign.party_affiliation
    FROM campaign
    WHERE campaign.candidate_id = candidate.id
    """)
    
    op.drop_table('campaign')
    # ### end Alembic commands ###
